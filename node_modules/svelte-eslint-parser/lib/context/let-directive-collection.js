"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LetDirectiveCollections = exports.LetDirectiveCollection = void 0;
/** A class that collects pattern nodes for Let directives. */
class LetDirectiveCollection {
    constructor() {
        this.list = [];
    }
    isEmpty() {
        return this.list.length === 0;
    }
    getLetParams() {
        return this.list.map((d) => d.pattern);
    }
    getParents() {
        return this.list.map((d) => d.directive);
    }
    getCallback() {
        return (nodes, options) => {
            for (let index = 0; index < nodes.length; index++) {
                const node = nodes[index];
                const { callbacks } = this.list[index];
                for (const callback of callbacks) {
                    callback(node, options);
                }
            }
        };
    }
    getTypes() {
        return this.list.map((d) => d.typing);
    }
    addPattern(pattern, directive, typing, ...callbacks) {
        this.list.push({
            pattern,
            directive,
            typing,
            callbacks,
        });
        return callbacks;
    }
}
exports.LetDirectiveCollection = LetDirectiveCollection;
class LetDirectiveCollections {
    constructor() {
        this.stack = [];
    }
    beginExtract() {
        this.stack.push(new LetDirectiveCollection());
    }
    getCollection() {
        return this.stack[this.stack.length - 1];
    }
    extract() {
        return this.stack.pop();
    }
}
exports.LetDirectiveCollections = LetDirectiveCollections;
