{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import html2canvas from 'html2canvas';\n  let paused = false;\n  let video = document.createElement('video');\n  let data;\n  /**\n   * @type {number}\n   */\n  let target_x;\n  /**\n   * @type {number}\n   */\n  let target_y;\n  let canvas;\n  /**\n   * @type {CanvasRenderingContext2D| null}\n   */\n  let ctx;\n  /**\n   * @type {ImageData}\n   */\n  let pixel;\n  /**\n   * @type {string}\n   */\n  let hex;\n  /**\n   * @type {string}\n   */\n  let buttonstr;\n  let colorName = '';\n  /**\n   * @param {HTMLVideoElement} videoObject\n   */\n  const mediaStream = window.navigator.mediaDevices\n    .getUserMedia({ video: { facingMode: 'environment' }, audio: false })\n    .then((videoStream) => {\n      // yay we can now assign srcObject to videoStream\n      if (video !== null) {\n        video.srcObject = videoStream;\n      }\n    })\n    .catch((e) => {\n      // tell the user something went wrong, e has the reason for why it failed\n      console.error('something is wrong :c', e);\n    });\n  /**\n   * @type {HTMLVideoElement}\n   */\n  let vid = document.createElement('video');\n  import { getColorName } from './colorNames.js';\n  let lastUpdate = 0;\n  let refreshIntervalId = setInterval(() => {\n    const now = Date.now();\n    if (now - lastUpdate < 500) return;\n    lastUpdate = now;\n    target_x = video.videoWidth / 2;\n    target_y = video.videoHeight / 2;\n    canvas = document.createElement('canvas');\n    // console.log('video width here', video.videoWidth);\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    ctx = canvas.getContext('2d');\n    // console.log(canvas.width);\n    if (ctx) {\n      ctx.drawImage(video, 0, 0);\n      data = ctx.getImageData(0, 0, video.videoWidth, video.videoHeight);\n      // console.log(target_x, target_y);\n      pixel = ctx.getImageData(target_x, target_y, 1, 1);\n      hex = rgbToHex(pixel.data[0], pixel.data[1], pixel.data[2]);\n      colorName = getColorName(hex);\n      buttonstr = hex;\n      let changeObject = document.getElementById('change');\n      let complimentObject = document.getElementById('compliment');\n      let complimentObject1 = document.getElementById('compliment1');\n      let c2 = document.getElementById('c2');\n      if (changeObject && complimentObject && c2 && complimentObject1) {\n        changeObject.style.background = 'rgba(' + pixel.data + ')';\n        complimentObject.style.color =\n          'rgba(' + getComplimentColor(pixel).data + ')';\n        complimentObject1.style.color =\n          'rgba(' + getComplimentColor(pixel).data + ')';\n        complimentObject1.style.borderBottom =\n          'rgba(' + getComplimentColor(pixel).data + ')  solid 2px';\n        c2.style.border =\n          'rgba(' + getComplimentColor(pixel).data + ') solid 4px';\n      }\n    }\n  }, 100);\n\n  /**\n   * @param {any} input\n   * takes in a pixel\n   */\n  function getComplimentColor(input) {\n    let r = input.data[0];\n    let g = input.data[1];\n    let b = input.data[2];\n    const pixelarray = new Uint8ClampedArray([\n      255 - r,\n      255 - g,\n      255 - b,\n      input.data[3],\n    ]);\n    let cc = new ImageData(pixelarray, 1, 1);\n    return cc;\n  }\n  function pauseVideo() {\n    paused = !paused;\n    if (paused) {\n      video.pause();\n    } else {\n      video.play();\n    }\n  }\n  let copyIndicator = false;\n  function copy() {\n    copyIndicator = true;\n    setTimeout(function () {\n      copyIndicator = false;\n    }, 1000);\n  }\n\n  /**\n   * @param {{ toString: (arg0: number) => any; }} c\n   */\n  function componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  }\n\n  /**\n   * @param {{ toString: (arg0: number) => any; }} r\n   * @param {{ toString: (arg0: number) => any; }} g\n   * @param {{ toString: (arg0: number) => any; }} b\n   */\n  function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n  }\n  $: buttonstr = copyIndicator ? hex + ' copied' : hex;\n\n  let shareCanvas;\n\n  async function shareColorCard() {\n    const cardElem = document.getElementById('change');\n    if (!cardElem) return;\n    const canvas = await html2canvas(cardElem, {\n      backgroundColor: null,\n      useCORS: true,\n      scale: 2,\n    });\n    canvas.toBlob(\n      async (blob) => {\n        if (!blob) return;\n        const file = new File([blob], 'color-card.png', { type: 'image/png' });\n        // Detect Safari (including iOS Safari)\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (\n          isSafari &&\n          navigator.canShare &&\n          navigator.canShare({ files: [file] })\n        ) {\n          try {\n            await navigator.share({\n              files: [file],\n              title: colorName || hex,\n              text: `Check out this color: ${colorName || hex}`,\n            });\n            return;\n          } catch (e) {\n            // User cancelled or error\n          }\n        }\n        // Fallback: download for Chrome and most non-Safari browsers\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'color-card.png';\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n          document.body.removeChild(a);\n          URL.revokeObjectURL(url);\n        }, 100);\n      },\n      'image/png'\n    );\n  }\n</script>\n\n<main id=\"change\">\n  <div style=\"position: relative; display: inline-block;\">\n    <!-- SVG gradient text for html2canvas (hidden in UI, visible to html2canvas) -->\n    <svg\n      id=\"svg-title\"\n      width=\"100%\"\n      height=\"70\"\n      viewBox=\"0 0 400 70\"\n      style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; opacity: 0; z-index: -1;\"\n      aria-hidden=\"true\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <defs>\n        <linearGradient id=\"text-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stop-color=\"red\" />\n          <stop offset=\"16%\" stop-color=\"orange\" />\n          <stop offset=\"33%\" stop-color=\"yellow\" />\n          <stop offset=\"50%\" stop-color=\"green\" />\n          <stop offset=\"66%\" stop-color=\"cyan\" />\n          <stop offset=\"83%\" stop-color=\"blue\" />\n          <stop offset=\"100%\" stop-color=\"purple\" />\n        </linearGradient>\n      </defs>\n      <text\n        x=\"50%\"\n        y=\"55\"\n        text-anchor=\"middle\"\n        font-family=\"'Monoton', cursive\"\n        font-size=\"60\"\n        font-weight=\"100\"\n        fill=\"url(#text-gradient)\"\n        style=\"text-transform:uppercase;\"\n      >\n        Seyan\n      </text>\n    </svg>\n    <h1>Seyan</h1>\n  </div>\n  <br/>\n  <button on:click={copy}>\n    <span style=\"font-size:1em \" id=\"compliment1\">{buttonstr}</span>\n  </button>\n  <div style=\"color:white;font-size:0.5rem;margin-bottom:0.5em;\">\n    {#if colorName}\n      <span style={`color: rgba(${getComplimentColor(pixel)?.data?.join(',') || '255,255,255,1'});`}><b>{colorName}</b></span>\n    {/if}\n  </div>\n  <div class=\"share-btn-container\">\n    <button\n      on:click={shareColorCard}\n      class=\"share-btn\"\n      title=\"Save or Share Color Card\"\n    >\n     ðŸ’¾\n    </button>\n  </div>\n  <!-- svelte-ignore a11y-media-has-caption -->\n  <div class=\"parent\">\n    <button id=\"compliment\" class=\"pauseButton\" on:click={pauseVideo}>\n      <video id=\"myvideo\" autoplay bind:this={video} playsinline /></button>\n    <div id=\"c2\" class=\"aimline\" />\n  </div>\n  <p>\n    <span style=\"background-color:#FF0000;color:white\"\n      >{(pixel?.data[0]).toString().padStart(3, '0')}\n    </span>\n    <span style=\"background-color:#00FF00\"\n      >{(pixel?.data[1]).toString().padStart(3, '0')}</span\n    >\n    <span style=\"background-color:#0000FF;color:white\"\n      >{(pixel?.data[2]).toString().padStart(3, '0')}</span\n    >\n  </p>\n</main>\n\n<style>\n  /* Hide SVG gradient title in UI, but html2canvas will still capture it */\n  #svg-title {\n    display: none;\n  }\n  /* Show SVG only when printing or for html2canvas (using a class if needed) */\n  .html2canvas-active #svg-title {\n    display: block !important;\n    opacity: 1 !important;\n    z-index: 1 !important;\n    position: static !important;\n  }\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 100vw;\n    margin: 0 auto;\n    background: black;\n    height: 100vh;\n  }\n  @media screen and (max-width: 600px) {\n    main {\n      max-height: 100vh;\n    }\n  }\n\n  h1 {\n    text-transform: uppercase;\n    display: inline;\n    font-size: 3rem;\n    font-weight: 100;\n    font-family: 'Monoton', cursive;\n    background-image: linear-gradient(\n      to right,\n      red,\n      orange,\n      yellow,\n      green,\n      cyan,\n      blue,\n      purple\n    );\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n  @media screen and (max-width: 600px) {\n    h1 {\n      margin: 0px;\n      padding: 0px;\n      /* line-height: 100%; */\n    }\n  }\n  p {\n    margin-bottom: 0px;\n  }\n  span {\n    font-family: 'Space Mono', monospace;\n    font-size: 3em;\n    margin: 1em;\n  }\n  @media screen and (max-width: 600px) {\n    span {\n      margin: 0em;\n    }\n  }\n  video {\n    max-width: 100%;\n    max-height: 50vh;\n  }\n  button {\n    border: transparent;\n    background: transparent;\n    padding: 0px;\n    margin: 0px;\n  }\n  .pauseButton {\n    border: transparent;\n    background: transparent;\n    padding: 10px;\n    size: auto;\n    margin: 0px;\n  }\n  .parent {\n    position: relative;\n  }\n  .aimline {\n    width: 5px;\n    height: 5px;\n    border: 4px black solid;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: 0 auto;\n    vertical-align: auto;\n    transform: translate(-7px, -7px);\n  }\n  .share-btn-container {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    z-index: 10;\n  }\n  .share-btn {\n    background: rgba(0, 0, 0, 0);\n    color: white;\n    border: none;\n    border-radius: 50%;\n    width: 48px;\n    height: 48px;\n    font-size: 1.75rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: background 0.2s;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA2QE,UAAU,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,AACf,CAAC,AAQD,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,KAAK,AACf,CAAC,AACD,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACpC,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,KAAK,AACnB,CAAC,AACH,CAAC,AAED,EAAE,eAAC,CAAC,AACF,cAAc,CAAE,SAAS,CACzB,OAAO,CAAE,MAAM,CACf,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,SAAS,CAAC,CAAC,OAAO,CAC/B,gBAAgB,CAAE;MAChB,EAAE,CAAC,KAAK,CAAC;MACT,GAAG,CAAC;MACJ,MAAM,CAAC;MACP,MAAM,CAAC;MACP,KAAK,CAAC;MACN,IAAI,CAAC;MACL,IAAI,CAAC;MACL,MAAM;KACP,CACD,uBAAuB,CAAE,IAAI,CAC7B,uBAAuB,CAAE,WAAW,AACtC,CAAC,AACD,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACpC,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,GAAG,AAEd,CAAC,AACH,CAAC,AACD,CAAC,eAAC,CAAC,AACD,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,YAAY,CAAC,CAAC,SAAS,CACpC,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,GAAG,AACb,CAAC,AACD,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACpC,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,GAAG,AACb,CAAC,AACH,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,WAAW,CACnB,UAAU,CAAE,WAAW,CACvB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,AACb,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,MAAM,CAAE,WAAW,CACnB,UAAU,CAAE,WAAW,CACvB,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,GAAG,AACb,CAAC,AACD,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,cAAc,CAAE,IAAI,CACpB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,AAClC,CAAC,AACD,oBAAoB,eAAC,CAAC,AACpB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,MAAM,CACX,KAAK,CAAE,MAAM,CACb,OAAO,CAAE,EAAE,AACb,CAAC,AACD,UAAU,eAAC,CAAC,AACV,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5B,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,OAAO,CAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,UAAU,CAAC,IAAI,AAC7B,CAAC"
}